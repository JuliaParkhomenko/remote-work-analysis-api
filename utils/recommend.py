'''
# recommend.py

import numpy as np
from joblib import load

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª–µ–π
scaler = load("model/scaler.pkl")
cluster_model = load("model/cluster_model.pkl")
attrition_model = load("model/attrition_model.pkl")
productivity_model = load("model/productivity_model.pkl")

def get_recommendations(data: dict) -> dict:
    """
    –ì–µ–Ω–µ—Ä—É—î —Ç–µ–∫—Å—Ç–æ–≤—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –¥–∞–Ω–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞.
    """
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Ö—ñ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
    hours = data["HoursWorkedPerWeek"]
    wellbeing = data["WellBeingScore"]
    satisfaction = np.mean([
        data["JobSatisfaction"],
        data["EnvironmentSatisfaction"],
        data["WorkLifeBalance"]
    ])
    emp_type = 0 if data["EmploymentType"] == "Remote" else 1

    # –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –¥–ª—è –º–æ–¥–µ–ª–µ–π –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è
    X_scaled = scaler.transform([[hours, wellbeing]])

    # –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è
    cluster = cluster_model.predict(X_scaled)[0]

    # –†–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è (Attrition)
    attrition_prob = attrition_model.predict_proba([[satisfaction]])[0][1]

    # –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
    predicted_productivity = productivity_model.predict([[hours, wellbeing]])[0]

    # === –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π ===
    recommendations = []

    # –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
    if predicted_productivity < 65:
        recommendations.append("üîß –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –Ω–∏–∂—á–∞ –∑–∞ –æ—á—ñ–∫—É–≤–∞–Ω—É. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ—Ü—ñ–Ω–∫—É –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –∫—Ä–∞—â—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É.")
    else:
        recommendations.append("‚úÖ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø–µ—Ä–µ–±—É–≤–∞—î –Ω–∞ –∑–∞–¥–æ–≤—ñ–ª—å–Ω–æ–º—É —Ä—ñ–≤–Ω—ñ.")

    # –î–æ–±—Ä–æ–±—É—Ç
    if wellbeing < 60:
        recommendations.append("üßò –î–æ–±—Ä–æ–±—É—Ç –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –Ω–∏–∑—å–∫–∏–π. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –Ω–∞–¥–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –ø—Ä–æ–≥—Ä–∞–º –º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤‚Äô—è —Ç–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≥–Ω—É—á–∫–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É.")
    elif wellbeing > 80:
        recommendations.append("üåü –ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –º–∞—î –≤–∏—Å–æ–∫–∏–π —Ä—ñ–≤–µ–Ω—å –¥–æ–±—Ä–æ–±—É—Ç—É. –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –Ω–∞—è–≤–Ω–∏—Ö —É–º–æ–≤.")
    else:
        recommendations.append("üìä –î–æ–±—Ä–æ–±—É—Ç –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ —Å–µ—Ä–µ–¥–Ω—ñ–π. –í–∞—Ä—Ç–æ –¥–æ—Å–ª—ñ–¥–∏—Ç–∏ –¥–∂–µ—Ä–µ–ª–∞ —Å—Ç—Ä–µ—Å—É –∞–±–æ –Ω–µ–∑–∞–¥–æ–≤–æ–ª–µ–Ω–æ—Å—Ç—ñ.")

    # –ü–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    if hours > 45:
        recommendations.append("‚è±Ô∏è –ü–µ—Ä–µ–≤–∏—â–µ–Ω–µ —Ä–æ–±–æ—á–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∑–º–µ–Ω—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω –∞–±–æ –¥–µ–ª–µ–≥—É–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è.")
    elif hours < 30:
        recommendations.append("‚ö†Ô∏è –ù–∏–∑—å–∫–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è. –°–ª—ñ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–∞–ª—É—á–µ–Ω—ñ—Å—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –∞–±–æ –æ–±—Å—è–≥ –∑–∞–¥–∞—á.")

    # –†–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è
    if attrition_prob > 0.5:
        recommendations.append("üö® –Ñ –≤–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—É –∑—É—Å—Ç—Ä—ñ—á –¥–ª—è –∑'—è—Å—É–≤–∞–Ω–Ω—è –ø—Ä–∏—á–∏–Ω.")
    else:
        recommendations.append("üü¢ –†–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –Ω–∏–∑—å–∫–∏–π.")

    # –¢–∏–ø –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ (–∫–ª–∞—Å—Ç–µ—Ä)
    cluster_map = {
        0: "–¢–∏–ø–æ–≤–∏–π –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –∑ –ø–æ–º—ñ—Ä–Ω–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º —ñ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é.",
        1: "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∏–π –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –∑ –º–µ–Ω—à–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º ‚Äî –≤–∞—Ä—Ç–æ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Ç–∞ –Ω–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏.",
        2: "–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫ —ñ–∑ –≤–∏—Å–æ–∫–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º, –∞–ª–µ –Ω–∏–∑—å–∫–∏–º –¥–æ–±—Ä–æ–±—É—Ç–æ–º ‚Äî —Ä–∏–∑–∏–∫ –≤–∏–≥–æ—Ä–∞–Ω–Ω—è."
    }
    recommendations.append(f"üìå –ö–ª–∞—Å—Ç–µ—Ä –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞: {cluster_map[cluster]}")

    return {
        "employee_id": data.get("EmployeeID", "N/A"),
        "recommendations": recommendations
    }
'''
# recommendation.py

def get_recommendations(cluster: int, attrition_prob: float, productivity: float) -> tuple:
    """
    –ì–µ–Ω–µ—Ä—É—î —Ç–µ–∫—Å—Ç–æ–≤—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ç–∞ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤.

    –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
    - cluster: –Ω–æ–º–µ—Ä –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó –≥—Ä—É–ø–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ (—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–∏–ø—É –ø–æ–≤–µ–¥—ñ–Ω–∫–∏/–≥—Ä—É–ø–∏)
    - attrition_prob: –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è (0‚Äì1)
    - productivity: –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ (0-100)

    –ü–æ–≤–µ—Ä—Ç–∞—î:
    - recommendations: —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –¥–ª—è HR
    - explanation: —É–∑–∞–≥–∞–ª—å–Ω–µ–Ω–∏–π –æ–ø–∏—Å —Å–∏—Ç—É–∞—Ü—ñ—ó
    """

    recommendations = []

    # --- –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å ---
    if productivity < 60:
        recommendations.append("–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –Ω–∏–∂—á–∞ –∑–∞ –æ—á—ñ–∫—É–≤–∞–Ω—É. "
            "–¶–µ –º–æ–∂–µ —Å–≤—ñ–¥—á–∏—Ç–∏ –ø—Ä–æ –≤—Ç–æ–º—É, –Ω–∏–∑—å–∫—É –º–æ—Ç–∏–≤–∞—Ü—ñ—é –∞–±–æ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –∑–∞–¥–∞—á. "
            "–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –æ–±—Å—è–≥ –æ–±–æ–≤‚Äô—è–∑–∫—ñ–≤, –Ω–∞–¥–∞—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –∞–±–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—É –±–µ—Å—ñ–¥—É."
        )
        prod_label = "–Ω–∏–∑—å–∫–∞"
    elif productivity > 85:
        recommendations.append(
            "–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î –≤–∏—Å–æ–∫—É –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å. "
            "–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –≤–∏–∑–Ω–∞—Ç–∏ –π–æ–≥–æ –≤–Ω–µ—Å–æ–∫, –Ω–∞–¥–∞—Ç–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –¥–ª—è –∫–∞—Ä‚Äô—î—Ä–Ω–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É "
            "—Ç–∞ –Ω–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ –º–æ—Ç–∏–≤–∞—Ü—ñ—é."
        )
        prod_label = "–≤–∏—Å–æ–∫–∞"
    else:
        recommendations.append(
            "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–∏–π–Ω—è—Ç–Ω–∏—Ö –º–µ–∂–∞—Ö. "
            "–í–∞—Ä—Ç–æ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞—è–≤–Ω—ñ —É–º–æ–≤–∏ –ø—Ä–∞—Ü—ñ, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç–∞–±—ñ–ª—å–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ."
        )
        prod_label = "—Å–µ—Ä–µ–¥–Ω—è"

    # --- –†–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è ---
    if attrition_prob > 0.7:
        recommendations.append(
            "–í–∏—è–≤–ª–µ–Ω–æ –¥—É–∂–µ –≤–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è. "
            "–ô–º–æ–≤—ñ—Ä–Ω–æ, –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –Ω–µ–∑–∞–¥–æ–≤–æ–ª–µ–Ω–∏–π —É–º–æ–≤–∞–º–∏ –ø—Ä–∞—Ü—ñ, –º–∞—î –ø—Ä–æ–±–ª–µ–º–∏ –∑ –±–∞–ª–∞–Ω—Å–æ–º '—Ä–æ–±–æ—Ç–∞-–∂–∏—Ç—Ç—è' "
            "–∞–±–æ –≤–≤–∞–∂–∞—î —Å–≤–æ—é —Ä–æ–±–æ—Ç—É –Ω–µ–¥–æ–æ—Ü—ñ–Ω–µ–Ω–æ—é. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—É —Ä–æ–∑–º–æ–≤—É "
            "—Ç–∞ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å–∏—Ç—É–∞—Ü—ñ—ó."
        )
        attrition_label = "–¥—É–∂–µ –≤–∏—Å–æ–∫–∏–π"
    elif attrition_prob > 0.4:
        recommendations.append(
            "–Ü—Å–Ω—É—î –ø–æ–º—ñ—Ä–Ω–∏–π —Ä–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è. "
            "HR –≤–∞—Ä—Ç–æ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É –Ω–∞ –¥–æ–±—Ä–æ–±—É—Ç –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞, —Ä—ñ–≤–µ–Ω—å –∑–∞–¥–æ–≤–æ–ª–µ–Ω–æ—Å—Ç—ñ —Ç–∞ —Ä—ñ–≤–µ–Ω—å –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è. "
            "–ü—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏—á–Ω–∞ —Ä–æ–∑–º–æ–≤–∞ –º–æ–∂–µ –∑–∞–ø–æ–±—ñ–≥—Ç–∏ –Ω–µ–±–∞–∂–∞–Ω–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥—É."
        )
        attrition_label = "–ø–æ–º—ñ—Ä–Ω–∏–π"
    else:
        recommendations.append(
            "–†–∏–∑–∏–∫ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –Ω–∞—Ä–∞–∑—ñ –Ω–∏–∑—å–∫–∏–π. –ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫, –π–º–æ–≤—ñ—Ä–Ω–æ, –∑–∞–¥–æ–≤–æ–ª–µ–Ω–∏–π —É–º–æ–≤–∞–º–∏ —Ç–∞ –¥–æ–±—Ä–µ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–π —É –∫–æ–º–∞–Ω–¥—É."
        )
        attrition_label = "–Ω–∏–∑—å–∫–∏–π"

    # --- –¢–∏–ø –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ (–∫–ª–∞—Å—Ç–µ—Ä) ---
    type_map = {
        0: (
            "–¶–µ–π –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É ‚Äî —Å–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –¥–æ–±—Ä–æ–±—É—Ç—É. "
            "–°–∏—Ç—É–∞—Ü—ñ—è –≤–∏–≥–ª—è–¥–∞—î —Å—Ç–∞–±—ñ–ª—å–Ω–æ—é, –∞–ª–µ –≤–∞—Ä—Ç–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ä—ñ–≤–µ–Ω—å –º–æ—Ç–∏–≤–∞—Ü—ñ—ó."
        ),
        1: (
            "–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫ —ñ–∑ –≤–∏—Å–æ–∫–∏–º —Ä—ñ–≤–Ω–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –Ω–∏–∂—á–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º. "
            "–Ñ –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É, –≤–∞–∂–ª–∏–≤–æ –Ω–µ –¥–æ–ø—É—Å—Ç–∏—Ç–∏ –≤—Ç—Ä–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–µ—Å—É —á–µ—Ä–µ–∑ –æ–¥–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ—Å—Ç—å –∞–±–æ –Ω–µ—Å—Ç–∞—á—É –≤–∏–∫–ª–∏–∫—ñ–≤."
        ),
        2: (
            "–£ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤–∏—Å–æ–∫–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ–∑–Ω–∞–∫–∏ –∑–Ω–∏–∂–µ–Ω–æ–≥–æ –¥–æ–±—Ä–æ–±—É—Ç—É. "
            "–¶–µ –º–æ–∂–µ —Å–≤—ñ–¥—á–∏—Ç–∏ –ø—Ä–æ –Ω–∞–±–ª–∏–∂–µ–Ω–Ω—è –¥–æ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ –≤–∏–≥–æ—Ä–∞–Ω–Ω—è. "
            "–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∑–º–µ–Ω—à–∏—Ç–∏ –æ–±—Å—è–≥ –∑–∞–¥–∞—á, –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –≤—ñ–¥–ø—É—Å—Ç–∫—É –∞–±–æ –≥–Ω—É—á–∫–∏–π –≥—Ä–∞—Ñ—ñ–∫."
        )
    }
    recommendations.append(type_map.get(cluster, "–¢–∏–ø –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ ‚Äî –≤–∞—Ä—Ç–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ."))

    # --- –ü–æ—è—Å–Ω–µ–Ω–Ω—è (–¥–ª—è –≤–∏–≤–æ–¥—É —É UI / –∑–≤—ñ—Ç) ---
    explanation = (
        f"–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {productivity:.1f} –±–∞–ª—ñ–≤ ‚Äî {prod_label}.\n"
        f"–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è: {attrition_prob:.2f} ‚Äî {attrition_label} —Ä–∏–∑–∏–∫.\n"
        f"{type_map.get(cluster, '')}"
    )

    return recommendations, explanation
